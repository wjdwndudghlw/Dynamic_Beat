MouseAdapter 클래스: MouseAdapter 클래스는 MouseListener와 MouseMotionListener와 같은 여러 마우스 이벤트 관련 인터페이스를 구현하고 있습니다. 이 클래스는 모든 이벤트 처리 메소드를 빈 상태로 구현(즉, 아무 작업도 수행하지 않는)하여 제공합니다. 이로 인해 개발자는 필요한 메소드만 선택하여 오버라이드할 수 있습니다.

addMouseListener 메서드 사용: addMouseListener 메서드에는 MouseListener 인터페이스를 구현하는 어떤 객체도 매개변수로 전달될 수 있습니다. 이 객체는 MouseAdapter의 인스턴스일 수도 있고, 직접 구현한 MouseListener 인터페이스의 인스턴스일 수도 있습니다. new MouseAdapter()와 같이 인스턴스를 생성하여 직접 메서드를 오버라이드하면서 전달할 수 있습니다. 이러한 방식은 매번 새로운 리스너 객체를 생성합니다.

가비지 컬렉션: 이벤트 처리가 끝나고, 해당 리스너 객체에 더 이상 참조가 없게 되면(예: 컴포넌트가 제거되거나 프로그램이 종료되는 경우), 이 객체는 자바 가비지 컬렉터에 의해 메모리에서 회수될 수 있습니다. 이 과정은 자동으로 이루어지며, 메모리 관리를 효율적으로 수행합니다.

이 요약은 자바에서 이벤트 리스너 패턴을 이해하는 데 도움을 줄 것입니다. MouseAdapter와 같은 유틸리티 클래스의 사용은 코드를 간결하게 유지하고, 필요한 기능만을 정의하여 개발자의 작업을 용이하게 만듭니다.


MouseListene의 인터페이스를 직접 구현하는 클래스일 경우 명시적으로(mouseClicked, mouseEntered, mouseExited, mousePressed, mouseReleased) 구현해야 하지만 MouseAdapter 클래스를 사용하므로써 이미 기본적으로 구현이되(기능구현X)
있기 때문에 내가 원하는 메소드들만 오버라이딩 하여 addMouseListener의 메소드에 매개변수로 해당 인스턴스를 전달하면 된다


* addMouseListener매개변수로 new MouseAdapter(){} 오버라이딩 한 객체의 인스턴스 전달이 잘 이해가 되지 않는다면 test.java 를 참고

